# sql_evaluation_library/src/sql_eval_lib/models/interface.py
import abc

class ModelInterface(abc.ABC):
    """
    Abstract base class defining the interface for a Text-to-SQL model
    to be evaluated by the library.
    """

    @abc.abstractmethod
    def get_sql(self, sql_prompt: str, sql_context: str, metadata: dict = None) -> str:
        """
        Generates an SQL query given a natural language prompt and SQL context.

        Args:
            sql_prompt (str): The natural language question.
            sql_context (str): The database schema context (e.g., CREATE TABLE statements).
            metadata (dict, optional): Additional information that might be useful for
                                       the model or for tracing (e.g., item_id, user_id, ground_truth_sql).
                                       Defaults to None.

        Returns:
            str: The SQL query generated by the model.
        """
        pass

    def __str__(self):
        return self.__class__.__name__

    def __repr__(self):
        return self.__class__.__name__
